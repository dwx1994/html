System.register([], function(_export, _context) { return { execute: function () {
System.register("chunks:///_virtual/_rollupPluginModLoBabelHelpers.js",[],(function(e){"use strict";return{execute:function(){function r(e,r,i,t,n,o,u){try{var a=e[o](u),l=a.value}catch(e){return void i(e)}a.done?r(l):Promise.resolve(l).then(t,n)}function i(e,r){for(var i=0;i<r.length;i++){var t=r[i];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function t(r,i){return(t=e("setPrototypeOf",Object.setPrototypeOf||function(e,r){return e.__proto__=r,e}))(r,i)}e({applyDecoratedDescriptor:function(e,r,i,t,n){var o={};Object.keys(t).forEach((function(e){o[e]=t[e]})),o.enumerable=!!o.enumerable,o.configurable=!!o.configurable,("value"in o||o.initializer)&&(o.writable=!0);o=i.slice().reverse().reduce((function(i,t){return t(e,r,i)||i}),o),n&&void 0!==o.initializer&&(o.value=o.initializer?o.initializer.call(n):void 0,o.initializer=void 0);void 0===o.initializer&&(Object.defineProperty(e,r,o),o=null);return o},assertThisInitialized:function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e},asyncToGenerator:function(e){return function(){var i=this,t=arguments;return new Promise((function(n,o){var u=e.apply(i,t);function a(e){r(u,n,o,a,l,"next",e)}function l(e){r(u,n,o,a,l,"throw",e)}a(void 0)}))}},createClass:function(e,r,t){r&&i(e.prototype,r);t&&i(e,t);return e},defineProperty:function(e,r,i){r in e?Object.defineProperty(e,r,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[r]=i;return e},inheritsLoose:function(e,r){e.prototype=Object.create(r.prototype),e.prototype.constructor=e,t(e,r)},initializerDefineProperty:function(e,r,i,t){if(!i)return;Object.defineProperty(e,r,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(t):void 0})},setPrototypeOf:t})}}}));

System.register("chunks:///_virtual/cocoscreator-game.cjs.min.mjs_cjs=&original=.js",["./cjs-loader.mjs","./cocoscreator-game.cjs.min.js"],(function(e,c){"use strict";var t,r;return{setters:[function(e){t=e.default},function(c){r=c.__cjsMetaURL;var t={};t.__cjsMetaURL=c.__cjsMetaURL,t.default=c.default,e(t)}],execute:function(){r||t.throwInvalidWrapper("./cocoscreator-game.cjs.min.js",c.meta.url),t.require(r)}}}));

System.register("chunks:///_virtual/cjs-loader.mjs",[],(function(r){"use strict";return{execute:function(){r("default",new(function(){function r(){this._namedWrappers={},this._resolveCache={},this._moduleCache={}}var e=r.prototype;return e.define=function(r,e){this._namedWrappers[r]=e},e.require=function(r){return this._require(r)},e.createRequireWithReqMap=function(r,e){return function(t){var n=r[t];if(n)return e(n);throw new Error("Unresolved specifier "+t)}},e.throwInvalidWrapper=function(r,e){throw new Error("Module '"+r+"' imported from '"+e+"' is expected be an ESM-wrapped CommonJS module but it doesn't.")},e._require=function(r,e){var t=this._moduleCache[r];if(t)return t.exports;var n={id:r,exports:{}};return this._moduleCache[r]=n,this._tryModuleLoad(n,r),n.exports},e._resolve=function(r,e){return this._resolveFromInfos(r,e)||this._throwUnresolved(r,e)},e._resolveFromInfos=function(r,e){var t,n;return r in cjsInfos?r:e&&null!==(t=null===(n=cjsInfos[e])||void 0===n?void 0:n.resolveCache[r])&&void 0!==t?t:void 0},e._tryModuleLoad=function(r,e){var t=!0;try{this._load(r,e),t=!1}finally{t&&delete this._moduleCache[e]}},e._load=function(r,e){var t=this._loadWrapper(e),n=this._createRequire(r);t(r.exports,n,r)},e._loadWrapper=function(r){return r in this._namedWrappers?this._namedWrappers[r]:this._loadExternalWrapper(r)},e._loadExternalWrapper=function(r){return function(e){var t;try{t=URL.fileURLToPath(r)}catch(e){throw new Error(r+" is not a valid file URL")}var n=require(t);Object.assign(e,n)}},e._createRequire=function(r){var e=this;return function(t){return e._require(t,r)}},e._throwUnresolved=function(r,e){throw new Error("Unable to resolve "+r+" from "+parent+".")},r}()))}}}));

} }; });