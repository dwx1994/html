{"version":3,"sources":["textureRenderUtils.js"],"names":["cc","Class","extends","Component","properties","camera","Camera","label","Label","spriteFrames","Sprite","_canvas","init","spriteFramesComp","find","node","getComponent","texture","RenderTexture","gl","game","_renderContext","size","srpite","getContentSize","initWithSize","width","height","STENCIL_INDEX8","targetTexture","input","document","createElement","setAttribute","getElementsByTagName","appendChild","oninput","e","file","target","files","reader","FileReader","readAsDataURL","onload","img","src","result","Texture2D","_nativeAsset","on","spriteFrame","SpriteFrame","addEventListener","input1","oninput1","input2","oninput2","input3","oninput3","createImg","dataURL","toDataURL","createCanvas","clearCanvas","ctx","getContext","render","data","readPixels","rowBytes","row","srow","imageData","createImageData","start","i","putImageData","showImage","offset","view","_frameSize","top","log","_img","captureAction","capture","scaleAction","scaleTo","targetPos","v2","moveAction","moveTo","spawn","runAction","blinkAction","blink","clearRect"],"mappings":"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","file":"textureRenderUtils.js","sourceRoot":"..\\..\\..\\..\\assets\\script","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        camera: cc.Camera,\n        label: cc.Label,\n        spriteFrames: [cc.Sprite],\n        _canvas: null,\n    },\n\n    init() {\n        const spriteFramesComp = cc.find(`Mask/content/headImage`,this.node).getComponent(`SpriteIndex`);\n        // this.label.string = '';\n        let texture = new cc.RenderTexture();\n        let gl = cc.game._renderContext;\n\n        let size = this.srpite.node.getContentSize();\n        texture.initWithSize(size.width, size.height, gl.STENCIL_INDEX8);\n        this.camera.targetTexture = texture;\n        this.texture = texture;\n        let input = document.createElement(\"input\");\n        input.setAttribute('type', 'file');\n        input.setAttribute('accept', 'image/*');\n        input.setAttribute('style', 'position:absolute;margin-left:30%;margin-top:50px;-webkit-user-select:file')\n\n        document.getElementsByTagName('body')[0].appendChild(input);\n\n        let oninput = (e) => {\n           \n            var file = e.target.files[0],//拿到原始对象\n        \n            reader = new FileReader();\n\n            //readAsDataURL(file),读取文件，将文件以数据URL的形式保存在result的属性中\n            reader.readAsDataURL(file);\n            //文件加载成功以后，渲染到页面\n            reader.onload = (e)=> {\n             \n                var img = document.createElement(\"img\");\n                img.src = e.target.result;\n                let texture = new cc.Texture2D();\n                texture._nativeAsset = img;\n                texture.on('load', () => {\n                    this.srpite.spriteFrame = new cc.SpriteFrame(texture);  \n                })\n            }\n        }\n        input.addEventListener('change', oninput);\n        //input.addEventListener('input', oninput);\n        // input.onpropertychange = oninput;\n        // input.oninput = oninput;\n\n\n        //替换样式1\n        let input1 = document.createElement(\"input\");\n        input1.setAttribute('type', 'file');\n        input1.setAttribute('accept', 'image/*');\n        input1.setAttribute('style', 'position:absolute;margin-left:35%;margin-top:220px;-webkit-user-select:file')\n\n        document.getElementsByTagName('body')[0].appendChild(input1);\n\n        let oninput1 = (e) => {\n            var file = e.target.files[0],//拿到原始对象\n            reader = new FileReader();\n            //readAsDataURL(file),读取文件，将文件以数据URL的形式保存在result的属性中\n            reader.readAsDataURL(file);\n            //文件加载成功以后，渲染到页面\n            reader.onload = (e)=> {\n                var img = document.createElement(\"img\");\n                img.src = e.target.result;\n                let texture = new cc.Texture2D();\n                texture._nativeAsset = img;\n                texture.on('load', () => {\n                    this.spriteFrames[0].spriteFrame = new cc.SpriteFrame(texture);  \n                    spriteFramesComp.spriteFrames[0] =  new cc.SpriteFrame(texture);   \n                })\n            }\n        }\n        input1.addEventListener('change', oninput1);\n\n        //替换样式2\n        let input2 = document.createElement(\"input\");\n        input2.setAttribute('type', 'file');\n        input2.setAttribute('accept', 'image/*');\n        input2.setAttribute('style', 'position:absolute;margin-left:40%;margin-top:220px;-webkit-user-select:file')\n\n        document.getElementsByTagName('body')[0].appendChild(input2);\n\n        let oninput2 = (e) => {\n            var file = e.target.files[0],//拿到原始对象\n            reader = new FileReader();\n            //readAsDataURL(file),读取文件，将文件以数据URL的形式保存在result的属性中\n            reader.readAsDataURL(file);\n            //文件加载成功以后，渲染到页面\n            reader.onload = (e)=> {\n                var img = document.createElement(\"img\");\n                img.src = e.target.result;\n                let texture = new cc.Texture2D();\n                texture._nativeAsset = img;\n                texture.on('load', () => {\n                    this.spriteFrames[1].spriteFrame = new cc.SpriteFrame(texture);     \n                    spriteFramesComp.spriteFrames[1] =  new cc.SpriteFrame(texture);\n                })\n            }\n        }\n        input2.addEventListener('change', oninput2);\n\n        //替换样式3\n        let input3 = document.createElement(\"input\");\n        input3.setAttribute('type', 'file');\n        input3.setAttribute('accept', 'image/*');\n        input3.setAttribute('style', 'position:absolute;margin-left:45%;margin-top:220px;-webkit-user-select:file')\n\n        document.getElementsByTagName('body')[0].appendChild(input3);\n\n        let oninput3 = (e) => {\n            var file = e.target.files[0],//拿到原始对象\n            reader = new FileReader();\n            //readAsDataURL(file),读取文件，将文件以数据URL的形式保存在result的属性中\n            reader.readAsDataURL(file);\n            //文件加载成功以后，渲染到页面\n            reader.onload = (e)=> {\n                var img = document.createElement(\"img\");\n                img.src = e.target.result;\n                let texture = new cc.Texture2D();\n                texture._nativeAsset = img;\n                texture.on('load', () => {\n                    this.spriteFrames[2].spriteFrame = new cc.SpriteFrame(texture);    \n                    spriteFramesComp.spriteFrames[2] =  new cc.SpriteFrame(texture); \n                })\n            }\n        }\n        input3.addEventListener('change', oninput3);\n\n\n    },\n    // create the img element\n    createImg() {\n        // return the type and dataUrl\n        var dataURL = this._canvas.toDataURL(\"image/png\");\n        var img = document.createElement(\"img\");\n        img.src = dataURL;\n        return img;\n    },\n    // create the canvas and context, filpY the image Data\n    createCanvas() {\n        let width = this.texture.width;\n        let height = this.texture.height;\n        if (!this._canvas) {\n            this._canvas = document.createElement('canvas');\n\n            this._canvas.width = width;\n            this._canvas.height = height;\n        }\n        else {\n            this.clearCanvas();\n        }\n        let ctx = this._canvas.getContext('2d');\n        this.camera.render();\n        let data = this.texture.readPixels();\n        // write the render data\n        let rowBytes = width * 4;\n        for (let row = 0; row < height; row++) {\n            let srow = height - 1 - row;\n            let imageData = ctx.createImageData(width, 1);\n            let start = srow * width * 4;\n            for (let i = 0; i < rowBytes; i++) {\n                imageData.data[i] = data[start + i];\n            }\n\n            ctx.putImageData(imageData, 0, row);\n        }\n        return this._canvas;\n    },\n\n    // show on the canvas\n    showImage(img) {\n        //var img = document.createElement(\"img\");\n        let offset = (cc.view._frameSize.width - this.srpite.node.width) / 2;\n        let top = (cc.view._frameSize.height - this.srpite.node.width) / 2;\n        cc.log('fs:', cc.view._frameSize.width);\n        cc.log('offset:', offset, img.width);\n        img.setAttribute('style', `position:absolute;margin-left:${offset}px ;margin-top:${top}px`);\n        document.getElementsByTagName('body')[0].appendChild(img);     \n        this._img = img;\n        //let texture = new cc.Texture2D();\n        // texture.initWithElement(img);\n\n        // let spriteFrame = new cc.SpriteFrame();\n        // spriteFrame.setTexture(texture);\n\n        // let node = new cc.Node();\n        // let sprite = node.addComponent(cc.Sprite);\n        // sprite.spriteFrame = spriteFrame;\n\n        // node.zIndex = cc.macro.MAX_ZINDEX;\n        // node.parent = cc.director.getScene();\n        // // set position\n        // let width = cc.winSize.width;\n        // let height = cc.winSize.height;\n        // node.x = width / 2;\n        // node.y = height / 2;\n        // node.on(cc.Node.EventType.TOUCH_START, () => {\n        //     node.parent = null;\n        \n        //     node.destroy();\n        // });\n\n        //this.captureAction(node, width, height);\n    },\n    // sprite action\n    captureAction(capture, width, height) {\n        let scaleAction = cc.scaleTo(1, 0.3);\n        let targetPos = cc.v2(width - width / 6, height / 4);\n        let moveAction = cc.moveTo(1, targetPos);\n        let spawn = cc.spawn(scaleAction, moveAction);\n        capture.runAction(spawn);\n        let blinkAction = cc.blink(0.1, 1);\n        // scene action\n        this.node.runAction(blinkAction);\n    },\n\n    clearCanvas() {\n        let ctx = this._canvas.getContext('2d');\n        ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n});\n"]}